#ifndef _RISCV_PERFORMANCE_H
#define _RISCV_PERFORMANCE_H

#include <stdint.h>
#include "decode.h"
#include "processor.h"


#define PERF_PIPE_STAGE 4
#define PERF_INST_TYPE_INT 0
#define PERF_INST_TYPE_INT_ALU 0
#define PERF_INST_TYPE_INT_MUL 1
#define PERF_INST_TYPE_INT_DIV 2
#define PERF_INST_TYPE_INT_LOAD 3
#define PERF_INST_TYPE_INT_STORE 4
#define PERF_INST_TYPE_INT_AMO 5
#define PERF_INST_TYPE_INT_BRANCH 6
#define PERF_INST_TYPE_INT_JUMP 7
#define PERF_INST_TYPE_INT_PRIV 8
#define PERF_INST_TYPE_FLOAT 1
#define PERF_INST_TYPE_FLOAT_XP2FP 0
#define PERF_INST_TYPE_FLOAT_FP2FP 1
#define PERF_INST_TYPE_FLOAT_FP2XP 2
#define PERF_INST_TYPE_FLOAT_LOAD 3
#define PERF_INST_TYPE_FLOAT_STORE 4
#define PERF_INST_TYPE_FLOAT_MADD 5
#define PERF_INST_TYPE_FLOAT_DIV 6
#define PERF_INST_TYPE_VECTOR 2
#define PERF_INST_TYPE_VECTOR_VX_ALU 0
#define PERF_INST_TYPE_VECTOR_VX_REDUCTION 1
#define PERF_INST_TYPE_VECTOR_VX_MUL 2
#define PERF_INST_TYPE_VECTOR_VX_DIV 3
#define PERF_INST_TYPE_VECTOR_VX_PERMUTATION 4
#define PERF_INST_TYPE_VECTOR_VX_LOAD_UNIT_STRIDE 5
#define PERF_INST_TYPE_VECTOR_VX_LOAD_STRIDE 6
#define PERF_INST_TYPE_VECTOR_VX_LOAD_INDEX 7
#define PERF_INST_TYPE_VECTOR_VX_LOAD_REG 8
#define PERF_INST_TYPE_VECTOR_VX_STORE_UNIT_STRIDE 9
#define PERF_INST_TYPE_VECTOR_VX_STORE_STRIDE 10
#define PERF_INST_TYPE_VECTOR_VX_STORE_INDEX 11
#define PERF_INST_TYPE_VECTOR_VX_STORE_REG 12
#define PERF_INST_TYPE_VECTOR_VX_AMO 13
#define PERF_INST_TYPE_VECTOR_VXP_ALU 14
#define PERF_INST_TYPE_VECTOR_VXP_MUL 15
#define PERF_INST_TYPE_VECTOR_VF_INT2FP 16
#define PERF_INST_TYPE_VECTOR_VF_FP2FP 17
#define PERF_INST_TYPE_VECTOR_VF_FP2INT 18
#define PERF_INST_TYPE_VECTOR_VF_MADD 19
#define PERF_INST_TYPE_VECTOR_VF_DIV 30
#define PERF_INST_TYPE_VECTOR_VP2XP 21
#define PERF_INST_TYPE_VECTOR_XP2VP 22
#define PERF_INST_TYPE_VECTOR_VP2FP 23
#define PERF_INST_TYPE_VECTOR_FP2VP 24
#define PERF_NUM_INST_TYPE 3
#define PERF_NUM_INST_TYPE_INT 9
#define PERF_NUM_INST_TYPE_FLOAT 7
#define PERF_NUM_INST_TYPE_VECTOR 25

#define MODEL_INT_DIV_LATENCY 33
#define MODEL_FLOAT_DIV_LATENCY 33


struct perf_pipeline_t {
  bool stage_valid;
  uint64_t inst_class;
  uint64_t inst_class_offset;
  bool inst_rs1_enable;
  uint64_t inst_rs1_type;
  uint64_t inst_rs1;
  bool inst_rs2_enable;
  uint64_t inst_rs2_type;
  uint64_t inst_rs2;
  bool inst_rs3_enable;
  uint64_t inst_rs3_type;
  uint64_t inst_rs3;
  bool inst_rd_enable;
  uint64_t inst_rd_type;
  uint64_t inst_rd;
};

#endif //_RISCV_PERFORMANCE_H

